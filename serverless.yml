# serverless.yml

service: aqts-capture-raw-load

provider:
  name: aws
  # discovered that putting both a `role` and `rolePermissionBoundary` in `provider` causes the latter to be omitted
  # the role has been split out and placed in the individual lambda defintions
  rolePermissionsBoundary:
    Fn::Sub:
      - "arn:aws:iam::${accountId}:policy/csr-Developer-Permissions-Boundary"
      - accountId:
         Ref: "AWS::AccountId"
  vpc: ${self:custom.vpc}
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'TEST'}
  runtime: python3.8
  timeout: 70
  logRetentionInDays: 90
  environment:
    DB_HOST: ${self:custom.db.connectInfo.DATABASE_ADDRESS}
    DB_USER: ${self:custom.db.connectInfo.SCHEMA_OWNER_USERNAME}
    DB_NAME: ${self:custom.db.connectInfo.DATABASE_NAME}
    DB_PASSWORD: ${self:custom.db.connectInfo.SCHEMA_OWNER_PASSWORD}
    AWS_DEPLOYMENT_REGION: ${self:provider.region}
  deploymentBucket:
    name: ${opt:bucket, iow-cloud-applications}
  stackTags:
    "wma:project_id": "aqtscapture"
    "wma:subSystem": "aqtscapture"
    "wma:application_id": "Aquarius TS Retriever Capture Raw Loader"
    "wma:contact": "Jim Kreft jkreft@usgs.gov"
    "wma:environment": ${self:provider.stage}
    "wma:taggingVersion": "0.0.1"
    "wma:organization": IOW
    "displayName": "Raw Load"
    commitIdentifier: ${git:sha1}

custom:
  prune:
    automatic: true
    number: 3
  exportGitVariables: false
  environments:
    TEST: test
    QA: qa
    PROD-EXTERNAL: prod-external
  vpc:
    securityGroupIds: ${ssm:/iow/retriever-capture/${self:provider.stage}/securityGroupIds~split}
    subnetIds: ${ssm:/iow/aws/vpc/${self:provider.stage}/subnetIds~split}
  db:
    connectInfo: ${ssm:/aws/reference/secretsmanager/NWCAPTURE-DB-${self:provider.stage}~true}
  esLogs:
    endpoint: ${ssm:/iow/aws/vpc/${self:provider.stage}/elasticsearchEndpoint}
    index: ${self:service}
    retentionInDays: 90
    filterPattern: "?ERROR ?CRITICAL"

functions:

  iowCaptureExtraSmall:
    handler: src.load.lambda_handler
    role:
      Fn::Sub:
        - arn:aws:iam::${accountId}:role/csr-Lambda-Role
        - accountId:
            Ref: AWS::AccountId
    memorySize: 256
    reservedConcurrency: 50
    environment:
      S3_OBJECT_SIZE_LIMIT: 25600000

  iowCaptureSmall:
    handler: src.load.lambda_handler
    role:
      Fn::Sub:
        - arn:aws:iam::${accountId}:role/csr-Lambda-Role
        - accountId:
            Ref: AWS::AccountId
    memorySize: 512
    reservedConcurrency: 15
    environment:
      S3_OBJECT_SIZE_LIMIT: 51200000

  iowCapture:
    handler: src.load.lambda_handler
    role:
      Fn::Sub:
        - arn:aws:iam::${accountId}:role/csr-Lambda-Role
        - accountId:
            Ref: AWS::AccountId
    memorySize: 1024
    reservedConcurrency: 5
    environment:
      S3_OBJECT_SIZE_LIMIT: 102400000

  iowCaptureMedium:
    handler: src.load.lambda_handler
    role:
      Fn::Sub:
        - arn:aws:iam::${accountId}:role/csr-Lambda-Role
        - accountId:
            Ref: AWS::AccountId
    memorySize: 1536
    reservedConcurrency: 5
    environment:
      S3_OBJECT_SIZE_LIMIT: 153600000

resources:
  Resources:
    snsTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-${self:provider.stage}-topic
        TopicName: ${self:service}-${self:provider.stage}-topic
    concurrencyAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-${self:provider.stage}-concurrency-alarm
        AlarmDescription: Notify when concurrency exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureLambdaFunction
        MetricName: ConcurrentExecutions
        Statistic: Maximum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 20
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopic
    errorAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-${self:provider.stage}-error-alarm
        AlarmDescription: Notify when number of errors exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureLambdaFunction
        MetricName: Errors
        Statistic: Sum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 5
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopic
    snsTopicMedium:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-medium-${self:provider.stage}-topic
        TopicName: ${self:service}-medium-${self:provider.stage}-topic
    concurrencyAlarmMedium:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-medium-${self:provider.stage}-concurrency-alarm
        AlarmDescription: Notify when concurrency exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureMediumLambdaFunction
        MetricName: ConcurrentExecutions
        Statistic: Maximum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 5
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopicMedium
    errorAlarmMedium:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-medium-${self:provider.stage}-error-alarm
        AlarmDescription: Notify when number of errors exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureMediumLambdaFunction
        MetricName: Errors
        Statistic: Sum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 10
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopicMedium

    snsTopicSmall:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-small-${self:provider.stage}-topic
        TopicName: ${self:service}-small-${self:provider.stage}-topic
    concurrencyAlarmSmall:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-small-${self:provider.stage}-concurrency-alarm
        AlarmDescription: Notify when concurrency exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureSmallLambdaFunction
        MetricName: ConcurrentExecutions
        Statistic: Maximum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 15
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopicSmall
    errorAlarmSmall:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-small-${self:provider.stage}-error-alarm
        AlarmDescription: Notify when number of errors exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureSmallLambdaFunction
        MetricName: Errors
        Statistic: Sum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 10
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopicSmall

    snsTopicExtraSmall:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-extra-small-${self:provider.stage}-topic
        TopicName: ${self:service}-extra-small-${self:provider.stage}-topic
    concurrencyAlarmExtraSmall:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-extra-small-${self:provider.stage}-concurrency-alarm
        AlarmDescription: Notify when concurrency exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureExtraSmallLambdaFunction
        MetricName: ConcurrentExecutions
        Statistic: Maximum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 30
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopicExtraSmall
    errorAlarmExtraSmall:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: ${self:service}-extra-small-${self:provider.stage}-error-alarm
        AlarmDescription: Notify when number of errors exceeds the specified threshold
        Namespace: 'AWS/Lambda'
        Dimensions:
          - Name: FunctionName
            Value:
              Ref: IowCaptureExtraSmallLambdaFunction
        MetricName: Errors
        Statistic: Sum
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: 10
        Period: 60
        EvaluationPeriods: 1
        AlarmActions:
          - Ref: snsTopicExtraSmall


plugins:
  - serverless-plugin-git-variables
  - serverless-python-requirements
  - serverless-prune-plugin
  - serverless-es-logs

package:
  exclude:
    - node_modules/**
    - Dockerfile
    - .dockerignore
    - Jenkinsfile
    - package.json
    - package-lock.json
